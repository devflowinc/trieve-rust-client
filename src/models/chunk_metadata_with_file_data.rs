/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.5.8
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ChunkMetadataWithFileData {
    #[serde(rename = "chunk_html", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub chunk_html: Option<Option<String>>,
    #[serde(rename = "content")]
    pub content: String,
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "file_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub file_id: Option<Option<uuid::Uuid>>,
    #[serde(rename = "file_name", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub file_name: Option<Option<String>>,
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "link", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub link: Option<Option<String>>,
    #[serde(rename = "metadata", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub metadata: Option<Option<serde_json::Value>>,
    #[serde(rename = "qdrant_point_id")]
    pub qdrant_point_id: uuid::Uuid,
    #[serde(rename = "tag_set", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tag_set: Option<Option<String>>,
    #[serde(rename = "time_stamp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub time_stamp: Option<Option<String>>,
    #[serde(rename = "tracking_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tracking_id: Option<Option<String>>,
    #[serde(rename = "updated_at")]
    pub updated_at: String,
    #[serde(rename = "weight")]
    pub weight: f64,
}

impl ChunkMetadataWithFileData {
    pub fn new(content: String, created_at: String, id: uuid::Uuid, qdrant_point_id: uuid::Uuid, updated_at: String, weight: f64) -> ChunkMetadataWithFileData {
        ChunkMetadataWithFileData {
            chunk_html: None,
            content,
            created_at,
            file_id: None,
            file_name: None,
            id,
            link: None,
            metadata: None,
            qdrant_point_id,
            tag_set: None,
            time_stamp: None,
            tracking_id: None,
            updated_at,
            weight,
        }
    }
}

