/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.8.7
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ClientDatasetConfiguration {
    #[serde(rename = "CREATE_CHUNK_FEATURE", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub create_chunk_feature: Option<Option<bool>>,
    #[serde(rename = "DATE_RANGE_VALUE", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_range_value: Option<Option<String>>,
    #[serde(rename = "DOCUMENT_UPLOAD_FEATURE", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub document_upload_feature: Option<Option<bool>>,
    #[serde(rename = "FILE_NAME_KEY")]
    pub file_name_key: String,
    #[serde(rename = "FILTER_ITEMS", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub filter_items: Option<Option<serde_json::Value>>,
    #[serde(rename = "FRONTMATTER_VALS", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub frontmatter_vals: Option<Option<String>>,
    #[serde(rename = "IMAGE_RANGE_END_KEY", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub image_range_end_key: Option<Option<String>>,
    #[serde(rename = "IMAGE_RANGE_START_KEY", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub image_range_start_key: Option<Option<String>>,
    #[serde(rename = "LINES_BEFORE_SHOW_MORE", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub lines_before_show_more: Option<Option<i32>>,
    #[serde(rename = "SEARCH_QUERIES", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub search_queries: Option<Option<String>>,
    #[serde(rename = "SUGGESTED_QUERIES", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub suggested_queries: Option<Option<String>>,
}

impl ClientDatasetConfiguration {
    pub fn new(file_name_key: String) -> ClientDatasetConfiguration {
        ClientDatasetConfiguration {
            create_chunk_feature: None,
            date_range_value: None,
            document_upload_feature: None,
            file_name_key,
            filter_items: None,
            frontmatter_vals: None,
            image_range_end_key: None,
            image_range_start_key: None,
            lines_before_show_more: None,
            search_queries: None,
            suggested_queries: None,
        }
    }
}

