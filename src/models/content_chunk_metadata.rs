/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.6
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ContentChunkMetadata {
    #[serde(rename = "chunk_html", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub chunk_html: Option<Option<String>>,
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "image_urls", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub image_urls: Option<Option<Vec<String>>>,
    #[serde(rename = "num_value", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub num_value: Option<Option<f64>>,
    #[serde(rename = "time_stamp", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub time_stamp: Option<Option<String>>,
    #[serde(rename = "tracking_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub tracking_id: Option<Option<String>>,
    #[serde(rename = "weight")]
    pub weight: f64,
}

impl ContentChunkMetadata {
    pub fn new(id: uuid::Uuid, weight: f64) -> ContentChunkMetadata {
        ContentChunkMetadata {
            chunk_html: None,
            id,
            image_urls: None,
            num_value: None,
            time_stamp: None,
            tracking_id: None,
            weight,
        }
    }
}

