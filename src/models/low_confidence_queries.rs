/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.6
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct LowConfidenceQueries {
    #[serde(rename = "filter", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub filter: Option<Option<Box<models::SearchAnalyticsFilter>>>,
    #[serde(rename = "page", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub page: Option<Option<i32>>,
    #[serde(rename = "threshold", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub threshold: Option<Option<f32>>,
    #[serde(rename = "type")]
    pub r#type: Type,
}

impl LowConfidenceQueries {
    pub fn new(r#type: Type) -> LowConfidenceQueries {
        LowConfidenceQueries {
            filter: None,
            page: None,
            threshold: None,
            r#type,
        }
    }
}
/// 
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum Type {
    #[serde(rename = "low_confidence_queries")]
    LowConfidenceQueries,
}

impl Default for Type {
    fn default() -> Type {
        Self::LowConfidenceQueries
    }
}

