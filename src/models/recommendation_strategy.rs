/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.7
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

/// RecommendationStrategy : Strategy to use for recommendations, either \"average_vector\" or \"best_score\". The default is \"average_vector\". The \"average_vector\" strategy will construct a single average vector from the positive and negative samples then use it to perform a pseudo-search. The \"best_score\" strategy is more advanced and navigates the HNSW with a heuristic of picking edges where the point is closer to the positive samples than it is the negatives.
/// Strategy to use for recommendations, either \"average_vector\" or \"best_score\". The default is \"average_vector\". The \"average_vector\" strategy will construct a single average vector from the positive and negative samples then use it to perform a pseudo-search. The \"best_score\" strategy is more advanced and navigates the HNSW with a heuristic of picking edges where the point is closer to the positive samples than it is the negatives.
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum RecommendationStrategy {
    #[serde(rename = "average_vector")]
    AverageVector,
    #[serde(rename = "best_score")]
    BestScore,

}

impl ToString for RecommendationStrategy {
    fn to_string(&self) -> String {
        match self {
            Self::AverageVector => String::from("average_vector"),
            Self::BestScore => String::from("best_score"),
        }
    }
}

impl Default for RecommendationStrategy {
    fn default() -> RecommendationStrategy {
        Self::AverageVector
    }
}

