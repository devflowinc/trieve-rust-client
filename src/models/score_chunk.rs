/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.6
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ScoreChunk {
    #[serde(rename = "chunk")]
    pub chunk: Box<models::NewChunkMetadataTypes>,
    #[serde(rename = "highlights", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub highlights: Option<Option<Vec<String>>>,
    #[serde(rename = "score")]
    pub score: f32,
}

impl ScoreChunk {
    pub fn new(chunk: models::NewChunkMetadataTypes, score: f32) -> ScoreChunk {
        ScoreChunk {
            chunk: Box::new(chunk),
            highlights: None,
            score,
        }
    }
}

