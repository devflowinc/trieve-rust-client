/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.6
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SearchAnalyticsFilter {
    #[serde(rename = "date_range", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub date_range: Option<Option<Box<models::DateRange>>>,
    #[serde(rename = "search_method", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub search_method: Option<Option<models::SearchMethod>>,
    #[serde(rename = "search_type", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub search_type: Option<Option<models::SearchType>>,
}

impl SearchAnalyticsFilter {
    pub fn new() -> SearchAnalyticsFilter {
        SearchAnalyticsFilter {
            date_range: None,
            search_method: None,
            search_type: None,
        }
    }
}

