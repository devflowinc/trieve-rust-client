/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.7
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct SortBySearchType {
    /// How many results to pull in before the rerabj
    #[serde(rename = "prefetch_amount", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub prefetch_amount: Option<Option<i64>>,
    /// Query to use for prefetching defaults to the search query
    #[serde(rename = "rerank_query", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub rerank_query: Option<Option<String>>,
    #[serde(rename = "rerank_type")]
    pub rerank_type: models::ReRankOptions,
}

impl SortBySearchType {
    pub fn new(rerank_type: models::ReRankOptions) -> SortBySearchType {
        SortBySearchType {
            prefetch_amount: None,
            rerank_query: None,
            rerank_type,
        }
    }
}

