/*
 * Trieve API
 *
 * Trieve OpenAPI Specification. This document describes all of the operations available through the Trieve API.
 *
 * The version of the OpenAPI document: 0.11.7
 * Contact: developers@trieve.ai
 * Generated by: https://openapi-generator.tech
 */

use crate::models;

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct StripeInvoice {
    #[serde(rename = "created_at")]
    pub created_at: String,
    #[serde(rename = "hosted_invoice_url")]
    pub hosted_invoice_url: String,
    #[serde(rename = "id")]
    pub id: uuid::Uuid,
    #[serde(rename = "org_id")]
    pub org_id: uuid::Uuid,
    #[serde(rename = "status")]
    pub status: String,
    #[serde(rename = "stripe_id", default, with = "::serde_with::rust::double_option", skip_serializing_if = "Option::is_none")]
    pub stripe_id: Option<Option<String>>,
    #[serde(rename = "total")]
    pub total: i32,
}

impl StripeInvoice {
    pub fn new(created_at: String, hosted_invoice_url: String, id: uuid::Uuid, org_id: uuid::Uuid, status: String, total: i32) -> StripeInvoice {
        StripeInvoice {
            created_at,
            hosted_invoice_url,
            id,
            org_id,
            status,
            stripe_id: None,
            total,
        }
    }
}

